[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"


[project]
dynamic = ["readme", "version"]
name = "pem"
description = "PEM file parsing in Python."
authors = [{ name = "Hynek Schlawack", email = "hs@ox.cx" }]
requires-python = ">=3.7"
license = { text = "MIT" }
keywords = ["pyopenssl", "ssl", "tls", "pem", "cryptography", "twisted"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = []

[project.urls]
Documentation = "https://pem.readthedocs.io/"
Changelog = "https://pem.readthedocs.io/en/stable/changelog.html"
"Source Code" = "https://github.com/hynek/pem"
Funding = "https://github.com/sponsors/hynek"
Tidelift = "https://tidelift.com/subscription/pkg/pypi-pem?utm_source=pypi-pem&utm_medium=referral&utm_campaign=enterprise"
Ko-fi = "https://ko-fi.com/the_hynek"


[project.optional-dependencies]
tests = ["coverage[toml]>=5.0.2", "pytest", "certifi", "pretend", "pyopenssl"]
docs = ["sphinx", "furo"]
types = ["mypy", "twisted", "types-pyOpenSSL"]
dev = ["pem[tests,docs,types]", "twisted[tls]"]


[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "no-guess-dev" }


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-markers", "--strict-config"]
testpaths = "tests"
xfail_strict = true
filterwarnings = ["once::Warning"]


[tool.coverage.run]
parallel = true
branch = true
source = ["pem"]

[tool.coverage.paths]
source = ["src", ".tox/py*/**/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    # a more strict default pragma
    "\\# pragma: no cover\\b",

    # allow defensive code
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
    "^\\s*return NotImplemented\\b",
    "^\\s*raise$",

    # typing-related code
    "^if (False|TYPE_CHECKING):",
    ": \\.\\.\\.(\\s*#.*)?$",
    "^ +\\.\\.\\.$",
    "-> ['\"]?NoReturn['\"]?:",
]

[tool.black]
line-length = 79


[tool.mypy]
strict = true

show_error_codes = true
enable_error_code = ["ignore-without-code"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/x-rst"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.rst"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """


Release Information
===================

"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.rst"
pattern = '(\d+.\d.\d \(.*?\)\r?\n.*?)\r?\n\r?\n\r?\n----\r?\n\r?\n\r?\n'


[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "\n\n\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "AUTHORS.rst"


[tool.ruff]
src = ["src", "tests", "docs/conf.py"]
select = [
    "E",   # pycodestyle
    "W",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "DTZ", # flake8-datetimez
    "I",   # isort
    "PGH", # pygrep-hooks
    "PLC", # Pylint
    "PIE", # flake8-pie
    "RUF", # ruff
]
ignore = [
    "RUF001", # leave my smart characters alone
    "E501",   # leave line-length enforcement to Black
]

[tool.ruff.per-file-ignores]
"*/*twisted.py" = ["N"]  # lol Twisted & PEP 8 names
"tests/*" = [
    "S101",   # assert
    "SIM300", # Yoda rocks in asserts
]

[tool.ruff.isort]
lines-between-types = 1
lines-after-imports = 2
